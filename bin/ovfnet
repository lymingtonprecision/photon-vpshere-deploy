#!/bin/sh

# Function calculates number of bit in a netmask
# From: http://www.linuxquestions.org/questions/programming-9/bash-cidr-calculator-646701/
mask2cidr() {
    nbits=0
    IFS=.
    for dec in $1 ; do
        case $dec in
            255) let nbits+=8;;
            254) let nbits+=7 ; break ;;
            252) let nbits+=6 ; break ;;
            248) let nbits+=5 ; break ;;
            240) let nbits+=4 ; break ;;
            224) let nbits+=3 ; break ;;
            192) let nbits+=2 ; break ;;
            128) let nbits+=1 ; break ;;
            0);;
            *) echo "Error: $dec is not recognised"; exit 1
        esac
    done
    echo "$nbits"
}

searchDomain=`ovfenv -k search-domain`
dns=`ovfenv -k dns | sed 's/, */\\nDNS=/g'`
eth0NW=`ovfenv -k eth0.network`
eth0MAC=`ovfenv -m "$eth0NW"`
eth0IP=`ovfenv -k eth0.ip`
eth0MASK=`ovfenv -k eth0.netmask`
eth0GW=`ovfenv -k eth0.gw`
eth0CIDR=$(mask2cidr $eth0MASK)

network=$(cat <<EOF
[Match]
MACAddress=$eth0MAC

[Network]
Domains=$searchDomain
DNS=$dns
EOF
)

network=$(cat <<EOF
$network

[Address]
Address=$eth0IP/$eth0CIDR

[Route]
Gateway=$eth0GW
EOF
)

echo "$network"

exit 0
